continue
puts "sdfsdf" if status :ordered
puts "sdfsdf" if status: :ordered
puts "sdfsdf" if status == :ordered
status
order
continue
status:
status
continue
unpayed_orders
unpayed_orders = Order.find_by(status: :delivered, user_id: user.id)
unpayed_orders
unpayed_orders = nil
unpayed_orders = Order.find_by(status: :delivered, user_id: user.id)
Order.find_by(status: :delivered, user_id: user.id)
unpayed_orders = Order.find_by(status: :delivered, user_id: user.id)
unpayed_orders
unpayed_orders = Order.find_by(status: :delivered, user_id: user.id)
unpayed_orders
unpayed_orders = Order.find_by(status: :canseled, user_id: user.id)
unpayed_orders
 unpayed_orders
puts "adsasD" if unpayed_orders
unpayed_orders = Order.find_by(status: :canseled, user_id: user.id)
puts "adsasD" if unpayed_orders
unpayed_orders = Order.find_by(status: :canseled, user_id: user.id)
puts "adsasD" if unpayed_orders
if unpayed_orders purs "aadaS" end
unpayed_orders = Order.find_by(status: :payed, user_id: user.id)
puts "adsasD" if unpayed_orders
if unpayed_orders purs "aadaS" end
if unpayed_orders do puts "sdasd" end
if unpayed_orders do puts "sdasd" end;
if unpayed_orders do puts "sdasd" end
if unpayed_orders
unpayed_orders = Order.find_by(status: :canceled, user_id: user.id)
unpayed_orders = Order.find_by(status: :payed, user_id: user.id)
unpayed_orders
unpayed_orders = Order.find_by(status: :payed, user_id: user.id)
unpayed_orders
unpayed_orders = Order.find_by(status: :canceled, user_id: user.id)
unpayed_orders
continue
unpayed_orders = Order.find_by(status: :payed)
unpayed_orders = Order.find_by(status: :ordered)
unpayed_orders = Order.find_by(status: :dsd)
unpayed_orders
unpayed_orders = Order.find_by(status: :dsd)
unpayed_orders
unpayed_orders = Order.find_by(status: :dsd)
unpayed_orders = Order.find_by(status: :ordered, user_id: 234)
unpayed_orders = Order.find_by(status: :ordered, user_id: 'asdas')
unpayed_orders = Order.find_by(status: :ordered, user_id: user.id)
unpayed_orders = Order.find(status: :ordered, user_id: user.id).count
unpayed_orders = Order.find_by(status: :ordered, user_id: user.id).count
unpayed_orders
unpayed_orders.user
unpayed_orders.count
unpayed_orders
unpayed_orders.
unpayed_orders.count
unpayed_orders.counts
unpayed_orders
continue
user
continue
user
continue
order.product.name
continue
order
order.product
 order.product
 order.product.name
continue
order
order.product
order
order.product
continue
order.product
order.products
order
order.product
order.product.
order.product.name
continue
order.product
order
order.user
order
order.order_id
order.order
order
order[0]
order
order.product
order
order.product.name
continue
order.product_id
order.product
order.products
order.product_id
order.product
order
order.product.name
td = order.product.name
continue
@orders.order_items.each do |d| puts d end
@orders.order_items.each do 
@orders.order_items.each do |d|
@orders.order_items
@orders.order_items.each do |order|
continue
@orders.order_items[0].product
@orders.order_items[0].product_id
@orders.order_items[0].product
@orders.order_items[0]
@orders.order_items[0].product
@orders.order_items[0]
@orders.order_items[0].name
@orders.order_items[0]
@orders.order_items
@orders
@orders[0]
@orders
@orders = Order.find_by(user: current_user, status: :ordered)
continue
faalis.new_user_session_path
main_app.new_user_session_path
main_app.routes.new_user_session
main_app.routes.new_user_session_path
main_app.routes
main_app
faalis
continue
current_user
curent_user
curent_user.id
current_user
current_user.id
Order.last.user_id
Order.last
@orders = Order.find_by(user: current_user)
@orders
@orders = Order.find_by(user: current_user)
@orders = Order.find_by(user: current_user, status: :ordered)
continue
x = Order.last
@orders = Order.find_by(user_id: current_user.id)
@orders = Order.find_by(user: current_user)
@orders = Order.find_by(user: current_user, status: :ordered)
Order.last
current_user
Order.last
@orders
continue
